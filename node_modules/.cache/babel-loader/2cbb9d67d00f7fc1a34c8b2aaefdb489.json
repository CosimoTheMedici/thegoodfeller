{"ast":null,"code":"var _jsxFileName = \"/home/cosmas/workspace/new_navbar_react/src/components/Submenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SidebarLink = styled(Link)`\ncolor: #fff;\ndisplay: block;\nwidth: 100%;\nline-height: 60px;\ntext-decoration: none;\npadding-left: 40px;\nbox-sizing: border-box;\ntransition: 0.5s;\ntransition-property: background;\n\n&:hover{\n    \n    background: #19B3D3;\n}\n`;\n_c = SidebarLink;\nconst DropdownLink = styled(Link)`\ncolor: #fff;\ndisplay: block;\nwidth: 100%;\nline-height: 60px;\ntext-decoration: none;\npadding-left: 40px;\nbox-sizing: border-box;\ntransition: 0.5s;\ntransition-property: background;\n\n&:hover{\n    \n    background: #19B3D3;\n}\n`;\n_c2 = DropdownLink;\nconst SidebarLabel = styled.span`\nmargin-left: 10px;\n`;\n_c3 = SidebarLabel;\n\nconst SubMenu = ({\n  item\n}) => {\n  _s();\n\n  const [subnav, setSubnav] = useState(false);\n\n  const showSubnav = () => setSubnav(!subnav);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      children: [/*#__PURE__*/_jsxDEV(SidebarLink, {\n        to: item.path,\n        onClick: item.subNav && showSubnav,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.icon, /*#__PURE__*/_jsxDEV(SidebarLabel, {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.subNav && subnav ? item.iconOpened : item.subNav ? item.iconClosed : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), subnav && item.subNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(DropdownLink, {\n          to: item.path,\n          children: [item.icon, /*#__PURE__*/_jsxDEV(SidebarLabel, {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(SubMenu, \"8TO7OvSEO773ba3WtX6QUICvPJk=\");\n\n_c4 = SubMenu;\nexport default SubMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SidebarLink\");\n$RefreshReg$(_c2, \"DropdownLink\");\n$RefreshReg$(_c3, \"SidebarLabel\");\n$RefreshReg$(_c4, \"SubMenu\");","map":{"version":3,"sources":["/home/cosmas/workspace/new_navbar_react/src/components/Submenu.js"],"names":["React","useState","styled","Link","Route","SidebarLink","DropdownLink","SidebarLabel","span","SubMenu","item","subnav","setSubnav","showSubnav","path","subNav","icon","title","iconOpened","iconClosed","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;;;AAGA,MAAMC,WAAW,GAAGH,MAAM,CAACC,IAAD,CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;KAAME,W;AAgBN,MAAMC,YAAY,GAAGJ,MAAM,CAACC,IAAD,CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMG,Y;AAgBN,MAAMC,YAAY,GAAGL,MAAM,CAACM,IAAK;AACjC;AACA,CAFA;MAAMD,Y;;AAIN,MAAME,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAExB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMY,UAAU,GAAG,MAAKD,SAAS,CAAC,CAACD,MAAF,CAAjC;;AACA,sBACI;AAAA,2BAAE,QAAC,KAAD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAED,IAAI,CAACI,IAAtB;AAA4B,QAAA,OAAO,EAAEJ,IAAI,CAACK,MAAL,IAAeF,UAApD;AAAA,gCACI;AAAA,qBACKH,IAAI,CAACM,IADV,eAEI,QAAC,YAAD;AAAA,sBAAgBN,IAAI,CAACO;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,oBACKP,IAAI,CAACK,MAAL,IAAeJ,MAAf,GAAwBD,IAAI,CAACQ,UAA7B,GAA0CR,IAAI,CAACK,MAAL,GAAYL,IAAI,CAACS,UAAjB,GAA8B;AAD7E;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUGR,MAAM,IAAID,IAAI,CAACK,MAAL,CAAYK,GAAZ,CAAgB,CAACV,IAAD,EAAMW,KAAN,KAAe;AACtC,4BACI,QAAC,YAAD;AAAc,UAAA,EAAE,EAAEX,IAAI,CAACI,IAAvB;AAAA,qBACKJ,IAAI,CAACM,IADV,eAEI,QAAC,YAAD;AAAA,sBAAeN,IAAI,CAACO;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAkCI,KAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARU,CAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBADJ;AAuBH,CA5BD;;GAAMZ,O;;MAAAA,O;AA8BN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {Link, Route} from 'react-router-dom'\n\n\nconst SidebarLink = styled(Link)`\ncolor: #fff;\ndisplay: block;\nwidth: 100%;\nline-height: 60px;\ntext-decoration: none;\npadding-left: 40px;\nbox-sizing: border-box;\ntransition: 0.5s;\ntransition-property: background;\n\n&:hover{\n    \n    background: #19B3D3;\n}\n`;\nconst DropdownLink = styled(Link)`\ncolor: #fff;\ndisplay: block;\nwidth: 100%;\nline-height: 60px;\ntext-decoration: none;\npadding-left: 40px;\nbox-sizing: border-box;\ntransition: 0.5s;\ntransition-property: background;\n\n&:hover{\n    \n    background: #19B3D3;\n}\n`\nconst SidebarLabel = styled.span`\nmargin-left: 10px;\n`;\n\nconst SubMenu = ({item}) => {\n\n    const [subnav ,setSubnav] = useState(false)\n\n    const showSubnav = ()=> setSubnav(!subnav)\n    return (\n        <><Route>\n            <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\n                <div>\n                    {item.icon }\n                    <SidebarLabel >{item.title}</SidebarLabel>\n                </div>\n                <div>\n                    {item.subNav && subnav ? item.iconOpened : item.subNav?item.iconClosed : null}\n                </div>\n            </SidebarLink>\n            {subnav && item.subNav.map((item,index) =>{\n                return(\n                    <DropdownLink to={item.path} key={index}>\n                        {item.icon}\n                        <SidebarLabel>{item.title}</SidebarLabel>\n                    </DropdownLink>\n                   \n                )\n            })} \n            </Route>\n        </>\n    )\n}\n\nexport default SubMenu\n\n\n"]},"metadata":{},"sourceType":"module"}